Client TCP (2 sockets):
  Servidor - Cliente 
    socket TCP
    - enviar comandos
    - receber respostas do comando (FIFO)
    - heartbeat (FIFO)
    - invites de jogo (FIFO)
  Client - Client (serverTCP.py para quem recebe o invite, TCPController.py para quem envia invite)
    socket TCP
    - receber jogadas
    - receber comandos de partida (out)

Client UDP (2 sockets):
  Servidor - Client
    socket UDP
    - enviar comandos
    - receber respostas do comando
    - heartbeat
    - invites de jogo
  Client - Client
    socket TCP
    - receber jogadas
    - receber comandos de partida (out)

client1 client2 servidor

História:
  client1 -call-> servidor (call <invintingUser> <invitedUser> no caso o username do client2)
  servidor -OK-> client1 (OK <ip> <port>)

  client1 -invite-> client2 (invite <invintingUser>)
  client2 -accept-> client1 (accept)
  

  client1 -startgame-> server (startgame <invintingUser> <invitedUser>) (bobinho de ser implementado)
  servidor -OK-> client1
  (IMPLEMENTADO)
  ----------------------------------------------------------------------------------
  Fluxo do jogo play pra um lado, play pro outro
  over
  latencia
  ---------------------------------------------------------------------------------------

  clientWinner -won-> server (won <winnerUser> <loserUser>)
  servidor -OK-> clientWinner

  clientWinner -draw-> server (draw <firstUser> <secondUser>)
  servidor -OK-> clientWinner

  clientWinner -over-> server (over <firstUser> <secondUser>)
  servidor -OK-> clientWinner

  (IMPLEMENTADO e testado)
 --------------------------------------
 • Servidor iniciado (Informando se a última execução dele foi finalizada com sucesso ou se houve
uma falha. Caso houve falha, e se havia alguma partida em execução, ele deve retomar o “controle”
dessa partida passando a enviar os heartbeats para os clientes, caso eles ainda estejam conectados
entre eles) (Implementado, testado)

• Conexão realizada por um cliente (Endereço IP do cliente); (Implementado, testado)

• Login com sucesso ou não (Nome do usuário que conseguiu, ou não, logar, e endereço IP de onde
veio o login); (Implementado, testado)

• Desconexão realizada por um cliente (Endereço IP do cliente);  (Implementado, testado)

• Inı́cio de uma partida (Endereço IP e nomes dos usuários dos jogadores); (Implementado, testado)

• Finalização de uma partida (Endereço IP, nomes dos usuários dos jogadores e nome do vencedor); (Implementado, testado)

• Desconexão inesperada de um cliente, verificada pelos heartbeats (Endereço IP do cliente); (implementado testado, usamos o mecanismo do tcp)

• Servidor finalizado (OK)


 --------------------------------------------------------------

Erro na comunicação dos clientes (CORRIGIDO)

TODO:
- Manter o estado dos clientes no servidor
- Colocar o log de desligamento abrupto do servidor OK
- Colocar o log de desligamento normal no servidor OK

- Corrigir os prints dos tabuleiros
- Inverter as jogadas do tabuleiros

- Fazer os testes